{"version":3,"sources":["Todo.jsx","Completed.jsx","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","useState","task","inputValue","setValue","mode","setMode","className","type","onClick","movetoCompleted","value","onChange","e","target","saveItem","id","deleteItem","Completed","movetodo","App","todo","completed","state","setState","i","setI","forceUpdate","useReducer","iden","list","index","findIndex","element","newState","splice","todolist","map","item","tasken","member","push","completedlist","htmlFor","document","getElementById","addItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4OAEe,SAASA,EAAKC,GACzB,MAAgCC,mBAASD,EAAME,MAA/C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,EAAwBH,mBAAS,QAAjC,mBAAOI,EAAP,KAAaC,EAAb,KAwBA,OACI,8BACI,qBAAIC,UAAWF,EAAf,UACI,uBAAOG,KAAK,WAAWC,QArBnC,WACIT,EAAMU,qBAqBE,gCAAQV,EAAME,OACd,uBAAOM,KAAK,OAAOG,MAAOR,EAAYS,SA3BlD,SAAsBC,GAClBT,EAASS,EAAEC,OAAOH,UA2BV,wBAAQJ,UAAU,OAAOE,QAhBrC,WACiB,aAATJ,GACAL,EAAMe,SAASZ,EAAYH,EAAMgB,GAAI,QACrCV,EAAQ,SAEK,SAATD,GACJC,EAAQ,aAUJ,kBACA,wBAAQC,UAAU,SAASE,QArBvC,WACIT,EAAMiB,WAAW,OAAOjB,EAAMgB,KAoBtB,yBClCD,SAASE,EAAWlB,GAC/B,MAAgCC,mBAASD,EAAME,MAA/C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,EAAwBH,mBAAS,IAAjC,mBAAOI,EAAP,KAAaC,EAAb,KAuBA,OACI,8BACI,qBAAIC,UAAWF,EAAf,UACI,uBAAOG,KAAK,WAAWC,QApBnC,WACIT,EAAMmB,cAoBE,gCAAQnB,EAAME,OACd,uBAAOM,KAAK,OAAOG,MAAOR,EAAYS,SA1BlD,SAAsBC,GAClBT,EAASS,EAAEC,OAAOH,UA0BV,wBAAQJ,UAAU,OAAOE,QAfrC,WACiB,aAATJ,GACAL,EAAMe,SAASZ,EAAYH,EAAMgB,GAAI,aACrCV,EAAQ,KAEK,KAATD,GACJC,EAAQ,aASJ,kBACA,wBAAQC,UAAU,SAASE,QApBvC,WACIT,EAAMiB,WAAW,YAAYjB,EAAMgB,KAmB3B,yBCmEDI,MA9Ff,WACE,MACAnB,mBAAS,CAAEoB,KAAM,CAAE,CAACL,GAAI,SAAUd,KAAM,yBACtCoB,UAAW,CAAC,CAACN,GAAI,SAAUd,KAAM,mBAFnC,mBAAOqB,EAAP,KAAcC,EAAd,KAIA,EAAgBvB,mBAAS,GAAzB,mBAAOwB,EAAP,KAAUC,EAAV,KACMC,EAAcC,sBAAW,iBAAO,MAAK,GA8BrCb,EAAW,SAAUZ,EAAY0B,EAAMrB,GAC3C,IAAMsB,EAAOP,EAAMf,GACbuB,EAAQD,EAAKE,WAAU,SAAAC,GAAO,OAAIA,EAAQjB,KAAOa,KACvDC,EAAKC,GAAO7B,KAAKC,EACjB,IAAI+B,EAAQ,2BAAOX,GAAP,kBAAef,EAAOsB,IAClCN,EAASU,IAGLjB,EAAa,SAACa,EAAMD,GACxB,IAAIK,EAAWX,EACfW,EAASJ,GAAMK,OAAOD,EAASJ,GAAME,WAAU,SAAAC,GAAO,OAAIA,EAAQjB,KAAOa,KAAM,GAC/EL,EAASU,GACTP,KAGIS,EAAWb,EAAMF,KAAKgB,KAAI,SAAAC,GAAI,OAClC,cAAEvC,EAAF,CACIG,KAAMoC,EAAKpC,KACXc,GAAIsB,EAAKtB,GAETN,gBAAiB,kBAtCC,SAACmB,EAAMU,GAC7B,IAAIL,EAAUX,EACRiB,EAAS,CAACxB,GAAIa,EAAM3B,KAAMqC,GAChCL,EAASZ,UAAUmB,KAAKD,GACxBN,EAASb,KAAKc,OAAOD,EAASb,KAAKW,WAAU,SAAAC,GAAO,OAAIA,EAAQjB,KAAKa,KAAM,GAC3EL,EAASU,GACTP,IAgC2BjB,CAAgB4B,EAAKtB,GAAIsB,EAAKpC,OACrDe,WAAYA,EACZF,SAAUA,GAHLuB,EAAKtB,OAOV0B,EAAgBnB,EAAMD,UAAUe,KAAI,SAAAC,GAAI,OAC5C,cAAEpB,EAAF,CACIhB,KAAMoC,EAAKpC,KACXc,GAAIsB,EAAKtB,GAETG,SAAU,kBAxCC,SAACU,EAAKU,GACrB,IAAIL,EAAWX,EACTiB,EAAS,CAAExB,GAAIa,EAAO3B,KAAMqC,GAClCL,EAASb,KAAKoB,KAAKD,GACnBN,EAASZ,UAAUa,OAAOD,EAASZ,UAAUU,WAAU,SAAAC,GAAO,OAAIA,EAAQjB,KAAKa,KAAM,GACrFL,EAASU,GACTP,IAkCoBR,CAASmB,EAAKtB,GAAGsB,EAAKpC,OACtCe,WAAYA,EACZF,SAAUA,GAHLuB,EAAKtB,OAOhB,OACE,sBAAKT,UAAU,YAAf,UACE,8BACE,uBAAOoC,QAAQ,WAAf,sBACA,uBAAO3B,GAAG,WAAWR,KAAK,SAC1B,wBAAQC,QAAS,kBAtEP,WACd,IAAME,EAAMiC,SAASC,eAAe,YAAYlC,MAChDiC,SAASC,eAAe,YAAYlC,MAAM,GAC1C,IAAIuB,EAAUX,EACRiB,EAAS,CAACxB,GAAI,QAAQS,EAAGvB,KAAMS,GACrCe,EAAKD,EAAE,GACPS,EAASb,KAAKoB,KAAKD,GACnBhB,EAASU,GA+DkBY,IAAWtC,KAAK,SAAvC,qBAGF,sCACE,oBAAIQ,GAAG,mBAAP,SACCoB,IAGH,2CACE,oBAAIpB,GAAG,kBAAP,SACC0B,QCpFMK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFd,SAASC,eAAe,SAM1BE,M","file":"static/js/main.bdccf872.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nexport default function Todo(props) {\r\n    const [inputValue, setValue ] = useState(props.task);\r\n    \r\n    const [mode, setMode] = useState('null');\r\n\r\n    function handleChange(e) {\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    function checkClick(){\r\n        props.movetoCompleted();\r\n    }\r\n\r\n    function deleteClick(){\r\n        props.deleteItem(\"todo\",props.id);\r\n    }\r\n\r\n    function editClick() {\r\n        if (mode === 'editMode') {\r\n            props.saveItem(inputValue, props.id, \"todo\");\r\n            setMode('null');\r\n        }\r\n        else if(mode === 'null') {\r\n            setMode('editMode');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div> \r\n            <li className={mode}>\r\n                <input type=\"checkbox\" onClick={checkClick} />\r\n                <label>{props.task}</label>\r\n                <input type=\"text\" value={inputValue} onChange={handleChange} />\r\n                <button className=\"edit\" onClick={editClick}>Edit</button>\r\n                <button className=\"delete\" onClick={deleteClick}>Delete</button>\r\n            </li>                 \r\n        </div>\r\n    )\r\n}","import { useState } from \"react\";\r\n\r\nexport default function Completed (props) {\r\n    const [inputValue, setValue ] = useState(props.task);\r\n    \r\n    const [mode, setMode] = useState('');\r\n\r\n    function handleChange(e) {\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    function checkClick(){\r\n        props.movetodo();\r\n    }\r\n\r\n    function deleteClick(){\r\n        props.deleteItem(\"completed\",props.id);\r\n    }\r\n\r\n    function editClick() {\r\n        if (mode === 'editMode') {\r\n            props.saveItem(inputValue, props.id, \"completed\");\r\n            setMode('');\r\n        }\r\n        else if(mode === '') {\r\n            setMode('editMode');\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n            <li className={mode}>\r\n                <input type=\"checkbox\" onClick={checkClick}/>\r\n                <label>{props.task}</label>\r\n                <input type=\"text\" value={inputValue} onChange={handleChange} />\r\n                <button className=\"edit\" onClick={editClick}>Edit</button>\r\n                <button className=\"delete\" onClick={deleteClick}>Delete</button>\r\n            </li>\r\n        </div>\r\n    )\r\n}","import './App.css';\n\nimport { useState, useReducer } from 'react';\n\n\nimport Todo from './Todo';\nimport Completed from './Completed';\n\nfunction App() {\n  const [state, setState] = \n  useState({ todo: [ {id: \"todo-0\", task: \"Mastering JavaScript\"}],\n    completed: [{id: \"todo-1\", task: \"Learn Coding\"}]});\n\n  const [i, setI]=useState(2);\n  const forceUpdate = useReducer(() => ({}))[1];\n\n  const addItem = () => {\n    const value=document.getElementById('new-task').value;\n    document.getElementById('new-task').value='';\n    let newState= state;\n    const member = {id: \"todo-\"+i, task: value};\n    setI(i+1);\n    newState.todo.push(member);\n    setState(newState);\n  };\n\n  const movetoCompleted = (iden, tasken) => {\n    let newState= state;\n    const member = {id: iden, task: tasken};\n    newState.completed.push(member);\n    newState.todo.splice(newState.todo.findIndex(element => element.id===iden),1);\n    setState(newState);\n    forceUpdate();\n  }\n\n  const movetodo = (iden,tasken) => {\n    let newState = state;\n    const member = { id: iden , task: tasken}\n    newState.todo.push(member);\n    newState.completed.splice(newState.completed.findIndex(element => element.id===iden),1);\n    setState(newState);\n    forceUpdate();\n  }\n\n  const saveItem = function (inputValue, iden, type) {   \n    const list = state[type]\n    const index = list.findIndex(element => element.id === iden);\n    list[index].task=inputValue;\n    let newState = {...state, [type]: list};\n    setState(newState);\n  }\n\n  const deleteItem = (list, iden) => {\n    let newState = state;\n    newState[list].splice(newState[list].findIndex(element => element.id === iden),1);\n    setState(newState);\n    forceUpdate();\n  }\n\n  const todolist = state.todo.map(item => \n    < Todo\n        task={item.task}\n        id={item.id}\n        key={item.id}\n        movetoCompleted={() => movetoCompleted(item.id, item.task)}\n        deleteItem={deleteItem}\n        saveItem={saveItem}\n    />\n    );\n\n  const completedlist = state.completed.map(item => \n    < Completed\n        task={item.task}\n        id={item.id}\n        key={item.id}\n        movetodo={() => movetodo(item.id,item.task)}\n        deleteItem={deleteItem}\n        saveItem={saveItem}\n    />\n    );  \n\n  return (\n    <div className=\"container\" >\n      <p> \n        <label htmlFor=\"new-task\">Add Item</label>\n        <input id=\"new-task\" type=\"text\" />\n        <button onClick={() => addItem()} type=\"submit\"> Add</button> \n      </p>\n\n      <h3>Todo</h3> \n        <ul id=\"incomplete-tasks\">\n        {todolist}\n        </ul>\n\n      <h3>Completed</h3> \n        <ul id=\"completed-tasks\"> \n        {completedlist}\n        </ul> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}